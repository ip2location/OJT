{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\z00s600199\\\\OJT\\\\my-app-typescript\\\\src\\\\App.tsx\";\nimport React from 'react';\nimport { createFFmpeg, fetchFile } from '@ffmpeg/ffmpeg';\nimport './App.css';\n\nclass MovieForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const ffmpeg = createFFmpeg({\n        log: true\n      });\n\n      const fs = require('fs');\n\n      async () => {\n        await ffmpeg.load();\n        ffmpeg.FS('writeFile', 'video.mp4', await fetchFile(event.target.value));\n        await ffmpeg.run('-i', 'video.mp4', 'audio.wav');\n        const data = ffmpeg.FS('readFile', 'audio.wav');\n        await fs.promises.writeFile('./test.wav', data); //音声変換したい\n      };\n\n      this.setState({\n        value: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {};\n\n    this.state = {\n      value: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"video/mp4\",\n          value: this.state.value,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MovieForm;","map":{"version":3,"sources":["C:/Users/z00s600199/OJT/my-app-typescript/src/App.tsx"],"names":["React","createFFmpeg","fetchFile","MovieForm","Component","constructor","props","handleChange","event","ffmpeg","log","fs","require","load","FS","target","value","run","data","promises","writeFile","setState","handleSubmit","state","bind","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,gBAAxC;AACA,OAAO,WAAP;;AAWA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAoF;AAClFC,EAAAA,WAAW,CAACC,KAAD,EAA6B;AACtC,UAAMA,KAAN;;AADsC,SAMxCC,YANwC,GAMxBC,KAAD,IAAoD;AACjE,YAAMC,MAAM,GAAGR,YAAY,CAAC;AAC1BS,QAAAA,GAAG,EAAE;AADqB,OAAD,CAA3B;;AAGA,YAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,kBAAY;AACV,cAAMH,MAAM,CAACI,IAAP,EAAN;AACAJ,QAAAA,MAAM,CAACK,EAAP,CAAU,WAAV,EAAsB,WAAtB,EAAkC,MAAMZ,SAAS,CAACM,KAAK,CAACO,MAAN,CAAaC,KAAd,CAAjD;AACA,cAAMP,MAAM,CAACQ,GAAP,CAAW,IAAX,EAAiB,WAAjB,EAA8B,WAA9B,CAAN;AACA,cAAMC,IAAI,GAAGT,MAAM,CAACK,EAAP,CAAU,UAAV,EAAsB,WAAtB,CAAb;AACA,cAAMH,EAAE,CAACQ,QAAH,CAAYC,SAAZ,CAAsB,YAAtB,EAAmCF,IAAnC,CAAN,CALU,CAMV;AACD,OAPD;;AAQE,WAAKG,QAAL,CAAc;AAACL,QAAAA,KAAK,EAAER,KAAK,CAACO,MAAN,CAAaC;AAArB,OAAd;AACH,KApBuC;;AAAA,SAqBxCM,YArBwC,GAqBxBd,KAAD,IAAiD,CAE/D,CAvBuC;;AAEtC,SAAKe,KAAL,GAAa;AAACP,MAAAA,KAAK,EAAC;AAAP,KAAb;AACA,SAAKT,YAAL,GAAoB,KAAKA,YAAL,CAAkBiB,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKF,YAAL,GAAoB,KAAKA,YAAL,CAAkBE,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAmBDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKH,YAArB;AAAA,8BACE;AAAA,yCAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,MAAM,EAAG,WAA5B;AAAwC,UAAA,KAAK,EAAE,KAAKC,KAAL,CAAWP,KAA1D;AAAiE,UAAA,QAAQ,EAAE,KAAKT;AAAhF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAnCiF;;AAsCpF,eAAeJ,SAAf","sourcesContent":["import React from 'react';\nimport ReactDom from 'react-dom';\nimport { createFFmpeg, fetchFile } from '@ffmpeg/ffmpeg';\nimport './App.css';\n\n\ninterface SquarePropsInterface {\n  //value: String;\n}\n\ninterface SquareStateInterface {\n  value: string;\n}\n\nclass MovieForm extends React.Component<SquarePropsInterface, SquareStateInterface> {\n  constructor(props:SquarePropsInterface) {\n    super(props);\n    this.state = {value:''}\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange = (event:React.ChangeEvent<HTMLInputElement>):void => {\n    const ffmpeg = createFFmpeg({\n      log: true,\n    });\n    const fs = require('fs');\n    async () => {\n      await ffmpeg.load();\n      ffmpeg.FS('writeFile','video.mp4',await fetchFile(event.target.value));\n      await ffmpeg.run('-i', 'video.mp4', 'audio.wav');\n      const data = ffmpeg.FS('readFile', 'audio.wav');\n      await fs.promises.writeFile('./test.wav',data);\n      //音声変換したい\n    }\n      this.setState({value: event.target.value});\n  }\n  handleSubmit = (event:React.FormEvent<HTMLFormElement>):void => {\n    \n  }\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name:\n          <input type=\"file\" accept = \"video/mp4\" value={this.state.value} onChange={this.handleChange} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n\nexport default MovieForm;\n\n"]},"metadata":{},"sourceType":"module"}