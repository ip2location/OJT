{"ast":null,"code":"const resolveURL = require('resolve-url');\n\nconst {\n  log\n} = require('../utils/log');\n\nmodule.exports = async ({\n  corePath: _corePath\n}) => {\n  if (typeof window.createFFmpegCore === 'undefined') {\n    log('info', 'fetch ffmpeg-core.worker.js script');\n    const corePath = resolveURL(_corePath);\n    const workerBlob = await (await fetch(corePath.replace('ffmpeg-core.js', 'ffmpeg-core.worker.js'))).blob();\n    window.FFMPEG_CORE_WORKER_SCRIPT = URL.createObjectURL(workerBlob);\n    log('info', `worker object URL=${window.FFMPEG_CORE_WORKER_SCRIPT}`);\n    log('info', `download ffmpeg-core script (~25 MB) from ${corePath}`);\n    return new Promise(resolve => {\n      const script = document.createElement('script');\n\n      const eventHandler = () => {\n        script.removeEventListener('load', eventHandler);\n        log('info', 'initialize ffmpeg-core');\n        resolve(window.createFFmpegCore);\n      };\n\n      script.src = corePath;\n      script.type = 'text/javascript';\n      script.addEventListener('load', eventHandler);\n      document.getElementsByTagName('head')[0].appendChild(script);\n    });\n  }\n\n  log('info', 'ffmpeg-core is loaded already');\n  return Promise.resolve(window.createFFmpegCore);\n};","map":{"version":3,"sources":["C:/Users/z00s600199/OJT/my-app-typescript/node_modules/@ffmpeg/ffmpeg/src/browser/getCreateFFmpegCore.js"],"names":["resolveURL","require","log","module","exports","corePath","_corePath","window","createFFmpegCore","workerBlob","fetch","replace","blob","FFMPEG_CORE_WORKER_SCRIPT","URL","createObjectURL","Promise","resolve","script","document","createElement","eventHandler","removeEventListener","src","type","addEventListener","getElementsByTagName","appendChild"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAUD,OAAO,CAAC,cAAD,CAAvB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,OAAO;AAAEC,EAAAA,QAAQ,EAAEC;AAAZ,CAAP,KAAmC;AAClD,MAAI,OAAOC,MAAM,CAACC,gBAAd,KAAmC,WAAvC,EAAoD;AAClDN,IAAAA,GAAG,CAAC,MAAD,EAAS,oCAAT,CAAH;AACA,UAAMG,QAAQ,GAAGL,UAAU,CAACM,SAAD,CAA3B;AACA,UAAMG,UAAU,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACL,QAAQ,CAACM,OAAT,CAAiB,gBAAjB,EAAmC,uBAAnC,CAAD,CAAZ,EAA2EC,IAA3E,EAAzB;AACAL,IAAAA,MAAM,CAACM,yBAAP,GAAmCC,GAAG,CAACC,eAAJ,CAAoBN,UAApB,CAAnC;AACAP,IAAAA,GAAG,CAAC,MAAD,EAAU,qBAAoBK,MAAM,CAACM,yBAA0B,EAA/D,CAAH;AACAX,IAAAA,GAAG,CAAC,MAAD,EAAU,6CAA4CG,QAAS,EAA/D,CAAH;AACA,WAAO,IAAIW,OAAJ,CAAaC,OAAD,IAAa;AAC9B,YAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;;AACA,YAAMC,YAAY,GAAG,MAAM;AACzBH,QAAAA,MAAM,CAACI,mBAAP,CAA2B,MAA3B,EAAmCD,YAAnC;AACAnB,QAAAA,GAAG,CAAC,MAAD,EAAS,wBAAT,CAAH;AACAe,QAAAA,OAAO,CAACV,MAAM,CAACC,gBAAR,CAAP;AACD,OAJD;;AAKAU,MAAAA,MAAM,CAACK,GAAP,GAAalB,QAAb;AACAa,MAAAA,MAAM,CAACM,IAAP,GAAc,iBAAd;AACAN,MAAAA,MAAM,CAACO,gBAAP,CAAwB,MAAxB,EAAgCJ,YAAhC;AACAF,MAAAA,QAAQ,CAACO,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,WAAzC,CAAqDT,MAArD;AACD,KAXM,CAAP;AAYD;;AACDhB,EAAAA,GAAG,CAAC,MAAD,EAAS,+BAAT,CAAH;AACA,SAAOc,OAAO,CAACC,OAAR,CAAgBV,MAAM,CAACC,gBAAvB,CAAP;AACD,CAvBD","sourcesContent":["const resolveURL = require('resolve-url');\nconst { log } = require('../utils/log');\n\nmodule.exports = async ({ corePath: _corePath }) => {\n  if (typeof window.createFFmpegCore === 'undefined') {\n    log('info', 'fetch ffmpeg-core.worker.js script');\n    const corePath = resolveURL(_corePath);\n    const workerBlob = await (await fetch(corePath.replace('ffmpeg-core.js', 'ffmpeg-core.worker.js'))).blob();\n    window.FFMPEG_CORE_WORKER_SCRIPT = URL.createObjectURL(workerBlob);\n    log('info', `worker object URL=${window.FFMPEG_CORE_WORKER_SCRIPT}`);\n    log('info', `download ffmpeg-core script (~25 MB) from ${corePath}`);\n    return new Promise((resolve) => {\n      const script = document.createElement('script');\n      const eventHandler = () => {\n        script.removeEventListener('load', eventHandler);\n        log('info', 'initialize ffmpeg-core');\n        resolve(window.createFFmpegCore);\n      };\n      script.src = corePath;\n      script.type = 'text/javascript';\n      script.addEventListener('load', eventHandler);\n      document.getElementsByTagName('head')[0].appendChild(script);\n    });\n  }\n  log('info', 'ffmpeg-core is loaded already');\n  return Promise.resolve(window.createFFmpegCore);\n};\n"]},"metadata":{},"sourceType":"script"}