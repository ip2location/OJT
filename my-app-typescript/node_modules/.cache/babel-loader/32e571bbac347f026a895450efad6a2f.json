{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\z00s600199\\\\OJT\\\\my-app-typescript\\\\src\\\\App.tsx\";\nimport React from 'react';\nimport { createFFmpeg } from '@ffmpeg/ffmpeg';\nimport './App.css';\n\nclass MovieForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = async event => {\n      const ffmpeg = createFFmpeg({\n        log: true\n      });\n      await ffmpeg.load();\n      ffmpeg.FS('writeFile', 'video.mp4', event.target.files[0]);\n      await ffmpeg.run('-i', 'video.mp4', 'audio.wav'); //errorハンドリングしてない、なんでエラー\n      //ffmpeg.FS('readFile','audio.wav');\n\n      Download(); //downloadしたい\n\n      function Download() {\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          id: \"download\",\n          href: \"#\",\n          download: \"./audio.wav\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 14\n        }, this);\n      }\n\n      this.setState({\n        value: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {};\n\n    this.state = {\n      value: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"video/mp4\",\n            value: this.state.value,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default MovieForm;","map":{"version":3,"sources":["C:/Users/z00s600199/OJT/my-app-typescript/src/App.tsx"],"names":["React","createFFmpeg","MovieForm","Component","constructor","props","handleChange","event","ffmpeg","log","load","FS","target","files","run","Download","setState","value","handleSubmit","state","bind","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,YAAT,QAAwC,gBAAxC;AACA,OAAO,WAAP;;AAgBA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAoF;AAClFC,EAAAA,WAAW,CAACC,KAAD,EAA6B;AACtC,UAAMA,KAAN;;AADsC,SAMxCC,YANwC,GAMzB,MAAOC,KAAP,IAAmE;AAChF,YAAMC,MAAM,GAAGP,YAAY,CAAC;AAC1BQ,QAAAA,GAAG,EAAE;AADqB,OAAD,CAA3B;AAIA,YAAMD,MAAM,CAACE,IAAP,EAAN;AACAF,MAAAA,MAAM,CAACG,EAAP,CAAU,WAAV,EAAsB,WAAtB,EAAkCJ,KAAK,CAACK,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAlC;AACA,YAAML,MAAM,CAACM,GAAP,CAAW,IAAX,EAAiB,WAAjB,EAA8B,WAA9B,CAAN,CAPgF,CAQhF;AACA;;AACAC,MAAAA,QAAQ,GAVwE,CAWhF;;AAEA,eAASA,QAAT,GAAoB;AAClB,4BAAO;AAAG,UAAA,EAAE,EAAC,UAAN;AAAiB,UAAA,IAAI,EAAC,GAAtB;AAA0B,UAAA,QAAQ,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AACC,WAAKC,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAEV,KAAK,CAACK,MAAN,CAAaK;AAArB,OAAd;AACH,KAvBuC;;AAAA,SAwBxCC,YAxBwC,GAwBxBX,KAAD,IAAiD,CAE/D,CA1BuC;;AAEtC,SAAKY,KAAL,GAAa;AAACF,MAAAA,KAAK,EAAC;AAAP,KAAb;AACA,SAAKX,YAAL,GAAoB,KAAKA,YAAL,CAAkBc,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKF,YAAL,GAAoB,KAAKA,YAAL,CAAkBE,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAsBDC,EAAAA,MAAM,GAAG;AACP,wBACA;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAE,KAAKH,YAArB;AAAA,gCACE;AAAA,2CAEE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,MAAM,EAAG,WAA5B;AAAwC,YAAA,KAAK,EAAE,KAAKC,KAAL,CAAWF,KAA1D;AAAiE,YAAA,QAAQ,EAAE,KAAKX;AAAhF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA;AAWD;;AAxCiF;;AA2CpF,eAAeJ,SAAf","sourcesContent":["import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport * as fs from 'fs';\r\nimport { createFFmpeg, fetchFile } from '@ffmpeg/ffmpeg';\r\nimport './App.css';\r\nimport { render } from '@testing-library/react';\r\n\r\n\r\ninterface SquarePropsInterface {\r\n  //value: String;\r\n}\r\n\r\ninterface SquareStateInterface {\r\n  value: string;\r\n}\r\n\r\ninterface VideoUploaderProps {\r\n  onChangeVideo: (object: { targetVideo : File | null}) => void\r\n}\r\n\r\nclass MovieForm extends React.Component<SquarePropsInterface, SquareStateInterface> {\r\n  constructor(props:SquarePropsInterface) {\r\n    super(props);\r\n    this.state = {value:''}\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleChange = async (event:React.ChangeEvent<HTMLInputElement>):Promise<void> => {\r\n    const ffmpeg = createFFmpeg({\r\n      log: true,\r\n    });\r\n    \r\n    await ffmpeg.load();\r\n    ffmpeg.FS('writeFile','video.mp4',event.target.files[0]);\r\n    await ffmpeg.run('-i', 'video.mp4', 'audio.wav');\r\n    //errorハンドリングしてない、なんでエラー\r\n    //ffmpeg.FS('readFile','audio.wav');\r\n    Download();\r\n    //downloadしたい\r\n    \r\n    function Download() {\r\n      return <a id=\"download\" href=\"#\" download=\"./audio.wav\"></a>;\r\n    }\r\n      this.setState({value: event.target.value});\r\n  }\r\n  handleSubmit = (event:React.FormEvent<HTMLFormElement>):void => {\r\n    \r\n  }\r\n  render() {\r\n    return (\r\n    <div>\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name:\r\n          <input type=\"file\" accept = \"video/mp4\" value={this.state.value} onChange={this.handleChange} />\r\n        </label>\r\n        <input type=\"submit\" value=\"Submit\" />\r\n      </form>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n\r\n"]},"metadata":{},"sourceType":"module"}