{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\z00s600199\\\\OJT\\\\my-app-typescript\\\\src\\\\App.tsx\";\nimport React from 'react';\nimport { createFFmpeg, fetchFile } from '@ffmpeg/ffmpeg';\nimport './App.css';\n\nclass MovieForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      const result = this.convertVideoToAudio(this.state.file);\n      result.then(result => {\n        const data = window.URL.createObjectURL(new Blob([result]));\n        const url = document.createElement('a');\n        url.href = data;\n        url.setAttribute('download', 'audio.wav');\n        url.click();\n      });\n      event.preventDefault(); //ページ遷移を防ぐため\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async convertVideoToAudio(file) {\n    const ffmpeg = createFFmpeg({\n      log: true\n    });\n    await ffmpeg.load();\n    const fetchedFile = await fetchFile(file);\n    ffmpeg.FS('writeFile', file.name, fetchedFile);\n    await ffmpeg.run('-i', file.name, 'audio.wav');\n    return ffmpeg.FS('readFile', 'audio.wav');\n  }\n\n  handleChange(event) {\n    if (event.target.files != null) {\n      Array.from(event.target.files).forEach(file => {\n        this.setState({\n          file: file\n        });\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"video/mp4\",\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MovieForm;","map":{"version":3,"sources":["C:/Users/z00s600199/OJT/my-app-typescript/src/App.tsx"],"names":["React","createFFmpeg","fetchFile","MovieForm","Component","constructor","props","handleSubmit","event","result","convertVideoToAudio","state","file","then","data","window","URL","createObjectURL","Blob","url","document","createElement","href","setAttribute","click","preventDefault","handleChange","bind","ffmpeg","log","load","fetchedFile","FS","name","run","target","files","Array","from","forEach","setState","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,gBAAxC;AACA,OAAO,WAAP;;AAUA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAoF;AAClFC,EAAAA,WAAW,CAACC,KAAD,EAA8B;AACvC,UAAMA,KAAN;;AADuC,SA0BzCC,YA1ByC,GA0BzBC,KAAD,IAAmD;AAEhE,YAAMC,MAAM,GAAG,KAAKC,mBAAL,CAAyB,KAAKC,KAAL,CAAWC,IAApC,CAAf;AACAH,MAAAA,MAAM,CAACI,IAAP,CAAaJ,MAAD,IAAY;AACtB,cAAMK,IAAI,GAAGC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2B,IAAIC,IAAJ,CAAS,CAACT,MAAD,CAAT,CAA3B,CAAb;AACA,cAAMU,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAZ;AACAF,QAAAA,GAAG,CAACG,IAAJ,GAAWR,IAAX;AACAK,QAAAA,GAAG,CAACI,YAAJ,CAAiB,UAAjB,EAA6B,WAA7B;AACAJ,QAAAA,GAAG,CAACK,KAAJ;AACD,OAND;AAOAhB,MAAAA,KAAK,CAACiB,cAAN,GAVgE,CAUzC;AACxB,KArCwC;;AAEvC,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKpB,YAAL,GAAoB,KAAKA,YAAL,CAAkBoB,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAED,QAAcjB,mBAAd,CAAkCE,IAAlC,EAA6D;AAC3D,UAAMgB,MAAM,GAAG3B,YAAY,CAAC;AAC1B4B,MAAAA,GAAG,EAAE;AADqB,KAAD,CAA3B;AAGA,UAAMD,MAAM,CAACE,IAAP,EAAN;AACA,UAAMC,WAAW,GAAG,MAAM7B,SAAS,CAACU,IAAD,CAAnC;AACAgB,IAAAA,MAAM,CAACI,EAAP,CAAU,WAAV,EAAuBpB,IAAI,CAACqB,IAA5B,EAAkCF,WAAlC;AACA,UAAMH,MAAM,CAACM,GAAP,CAAW,IAAX,EAAiBtB,IAAI,CAACqB,IAAtB,EAA4B,WAA5B,CAAN;AACA,WAAOL,MAAM,CAACI,EAAP,CAAU,UAAV,EAAsB,WAAtB,CAAP;AAED;;AACON,EAAAA,YAAR,CAAqBlB,KAArB,EAAiE;AAC/D,QAAIA,KAAK,CAAC2B,MAAN,CAAaC,KAAb,IAAsB,IAA1B,EAAgC;AAC9BC,MAAAA,KAAK,CAACC,IAAN,CAAW9B,KAAK,CAAC2B,MAAN,CAAaC,KAAxB,EAA+BG,OAA/B,CAAuC3B,IAAI,IAAI;AAC7C,aAAK4B,QAAL,CAAc;AACZ5B,UAAAA,IAAI,EAAEA;AADM,SAAd;AAGD,OAJD;AAKD;AACF;;AAaD6B,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAE,KAAKlC,YAArB;AAAA,gCACE;AAAA,2CAEA;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,MAAM,EAAC,WAA1B;AAAsC,YAAA,QAAQ,EAAE,KAAKmB;AAArD;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAnDiF;;AAsDpF,eAAevB,SAAf","sourcesContent":["import React from 'react';\r\nimport { createFFmpeg, fetchFile } from '@ffmpeg/ffmpeg';\r\nimport './App.css';\r\n\r\n\r\ninterface SquarePropsInterface {\r\n}\r\n\r\ninterface SquareStateInterface {\r\n  file: File;\r\n}\r\n\r\nclass MovieForm extends React.Component<SquarePropsInterface, SquareStateInterface> {\r\n  constructor(props: SquarePropsInterface) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  private async convertVideoToAudio(file: File): Promise<File> {\r\n    const ffmpeg = createFFmpeg({\r\n      log: true,\r\n    });\r\n    await ffmpeg.load();\r\n    const fetchedFile = await fetchFile(file);\r\n    ffmpeg.FS('writeFile', file.name, fetchedFile);\r\n    await ffmpeg.run('-i', file.name, 'audio.wav');\r\n    return ffmpeg.FS('readFile', 'audio.wav');\r\n\r\n  }\r\n  private handleChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n    if (event.target.files != null) {\r\n      Array.from(event.target.files).forEach(file => {\r\n        this.setState({\r\n          file: file,\r\n        });\r\n      })\r\n    }\r\n  }\r\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>): void => {\r\n\r\n    const result = this.convertVideoToAudio(this.state.file);\r\n    result.then((result) => {\r\n      const data = window.URL.createObjectURL(new Blob([result]));\r\n      const url = document.createElement('a');\r\n      url.href = data;\r\n      url.setAttribute('download', 'audio.wav');\r\n      url.click();\r\n    })\r\n    event.preventDefault();//ページ遷移を防ぐため\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Name:\r\n          <input type=\"file\" accept=\"video/mp4\" onChange={this.handleChange} />\r\n          </label>\r\n          <input type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n\r\n"]},"metadata":{},"sourceType":"module"}